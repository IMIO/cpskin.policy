[buildout]
extends =
    https://raw.github.com/collective/buildout.plonetest/master/test-4.x.cfg
    robot.cfg
    versions.cfg
    https://raw.githubusercontent.com/IMIO/buildout.jenkins/master/qa.cfg

package-name = cpskin.policy
package-extras = [test]
#allow-picked-versions = false
#show-picked-versions = true

versions = versions

extensions =
    mr.developer

auto-checkout =
    collective.directory
    collective.geo.leaflet
    collective.schedulefield
    collective.sticky
    cpskin.core
    cpskin.locales
    cpskin.menu
    cpskin.minisite
    cpskin.theme
    cpskin.workflow
    cpskin.demo
    affinitic.caching
    cpskin.slider


index = http://devpi.imio.be/root/imio/+simple/
allow-hosts +=
    devpi.imio.be

parts +=
    code-analysis
    omelette

[instance]
environment-vars +=
    SMTP_QUEUE_DIRECTORY ${buildout:directory}/mailhost

eggs +=
    sc.social.bookmarks

[test]
recipe = zc.recipe.testrunner
eggs =
    ${instance:eggs}
    cpskin.policy [test]
defaults = ['-s', 'cpskin.policy', '--auto-color', '--auto-progress']
environment = testenv

[testenv]
zope_i18n_compile_mo_files = true


[code-analysis]
directory = ${buildout:directory}/cpskin/

[omelette]
recipe = collective.recipe.omelette
eggs =
    ${buildout:eggs}
    ${instance:eggs}


[remotes]
imio = https://github.com/IMIO
imio_push = git@github.com:IMIO
affinitic = https://github.com/affinitic
affinitic_push = git@github.com:affinitic
plone = git://github.com/plone
plone_push = git@github.com:plone
collective = git://github.com/collective
collective_push = git@github.com:collective

[sources]
affinitic.caching = git ${remotes:affinitic}/affinitic.caching.git pushurl=${remotes:affinitic_push}/affinitic.caching.git
collective.directory = git ${remotes:imio}/collective.directory.git pushurl=${remotes:imio_push}/collective.directory.git
collective.geo.leaflet = git https://github.com/collective/collective.geo.leaflet
collective.schedulefield = git ${remotes:imio}/collective.schedulefield.git pushurl=${remotes:imio_push}/collective.schedulefield.git
collective.sticky = git ${remotes:imio}/collective.sticky.git pushurl=${remotes:imio_push}/collective.sticky.git
cpskin.core = git ${remotes:imio}/cpskin.core.git pushurl=${remotes:imio_push}/cpskin.core.git
cpskin.locales = git ${remotes:imio}/cpskin.locales.git pushurl=${remotes:imio_push}/cpskin.locales.git
cpskin.menu = git ${remotes:imio}/cpskin.menu.git pushurl=${remotes:imio_push}/cpskin.menu.git
cpskin.migration = git ${remotes:imio}/cpskin.migration.git pushurl=${remotes:imio_push}/cpskin.migration.git
cpskin.minisite = git ${remotes:imio}/cpskin.minisite.git pushurl=${remotes:imio_push}/cpskin.minisite.git
cpskin.demo = git ${remotes:imio}/cpskin.demo.git pushurl=${remotes:imio_push}/cpskin.demo.git
cpskin.slider = git ${remotes:imio}/cpskin.slider.git pushurl=${remotes:imio_push}/cpskin.slider.git
cpskin.theme = git ${remotes:imio}/cpskin.theme.git pushurl=${remotes:imio_push}/cpskin.theme.git
cpskin.workflow = git ${remotes:imio}/cpskin.workflow.git pushurl=${remotes:imio_push}/cpskin.workflow.git
#diazotheme.frameworks = git https://github.com/collective/diazotheme.frameworks.git
lovely.memcached = git https://github.com/lovelysystems/lovely.memcached.git
plone.app.event = git ${remotes:plone}/plone.app.event.git pushurl=${remotes:plone_push}/plone.app.event.git branch=1.1.x
collective.eeafaceted.collectionwidget = git ${remotes:collective}/collective.eeafaceted.collectionwidget.git pushurl=${remotes:collective_push}/collective.eeafaceted.collectionwidget.git branch=add-plone-app-contenttypes-support
